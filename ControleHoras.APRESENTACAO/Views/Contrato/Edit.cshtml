@model ControleHoras.APRESENTACAO.Models.ContratoViewModel

@{
    ViewBag.Title = "Cadastro de Contratos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Cadastro de Contratos</h2>
<nav class="breadcrumb">
    @Html.ActionLink("Contratos", "Index") /
    <span class="breadcrumb-item active">Editar Contrato</span>
</nav>

@using (Html.BeginForm("Edit", "Contrato", FormMethod.Post, new { onsubmit = "FormatarValores()" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.ContratoID)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClienteID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Cliente.Nome, new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.ClienteID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroReferencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroReferencia, new { htmlAttributes = new { @maxlength = "20", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroReferencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModalidadeContrato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ModalidadeContrato", new List<SelectListItem> {
                    new SelectListItem{ Text="Alocação", Value = "A", Selected = true },
                    new SelectListItem{ Text="Projeto", Value = "P" }
                 },
                 htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ModalidadeContrato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModalidadeApuracao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ModalidadeApuracao", new List<SelectListItem> {
                    new SelectListItem{ Text="Hora Aberta", Value = "A", Selected = true },
                    new SelectListItem{ Text="Hora Fechada", Value = "F" }
                 },
                 htmlAttributes: new { @class = "form-control", @onchange = "habilitarHorasMes();" })
                @Html.ValidationMessageFor(model => model.ModalidadeApuracao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="divHorasMes" class="form-group" style="display: none">
            @Html.LabelFor(model => model.QtdHorasMes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtdHorasMes, new { htmlAttributes = new { @maxlength = "3", @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.QtdHorasMes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="divApuracaoHoraExtra" class="form-group">
            @Html.LabelFor(model => model.ApuracaoHoraExtra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.ApuracaoHoraExtra, htmlAttributes: new { @onchange = "habilitarHoraExtra();" })
                </div>
            </div>
        </div>

        <div id="divHorasExtras" class="form-group" style="display: none">
            @Html.LabelFor(model => model.ValorHoraExtra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorHoraExtra, new { htmlAttributes = new { @maxlength = "5", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorHoraExtra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DataInicio, "{0:dd/MM/yyyy}", htmlAttributes: new { @class = "form-control", data_val_date = "Data inicial inválida" })
                @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DataFim, "{0:dd/MM/yyyy}", htmlAttributes: new { @class = "form-control", data_val_date = "Data final inválida" })
                @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @maxlength = "50", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioEntrada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.HorarioEntrada, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HorarioEntrada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioSaida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.HorarioSaida, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HorarioSaida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IntervaloInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IntervaloInicio,  htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IntervaloInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IntervaloFim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IntervaloFim,  htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IntervaloFim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValidarLocalizacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.ValidarLocalizacao)
                @Html.ValidationMessageFor(model => model.ValidarLocalizacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListaProfissionais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="float:left;">
                @Html.ListBoxFor(model => model.Profissionais, Model.ListaProfissionais, new { style = "width:250px" })
            </div>
            <div style="float: left;">
                <button type="button" id="btnAdicionar" onclick="AdicionarProfissional()">>></button>
                <br />
                <button type="button" id="btnRemover" value="<<" onclick="RemoverProfissional()"><<</button>
            </div>
            <div style="float: left;">
                @Html.ListBoxFor(model => model.ProfissionaisAlocados, Model.ListaProfissionaisAlocados, new { style = "width:250px" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    &laquo;@Html.ActionLink("Voltar", "Index")
</div>

@section Styles {
    @Styles.Render("~/styles/datetimepicker")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/mask")
    @Scripts.Render("~/bundles/maskMoney")
    @Scripts.Render("~/bundles/datetimepicker")

    <script type="text/javascript">
        function habilitarHoraExtra() {
            if ($("#ApuracaoHoraExtra").is(':checked'))
                $("#divHorasExtras").show();
            else {
                var valorHoraExtra = $("#ValorHoraExtra").val();
                if (valorHoraExtra != '')
                    $("#divHorasExtras").show();
                else
                    $("#divHorasExtras").hide();
            }
        }

        function habilitarHorasMes() {
            if ($("#ModalidadeApuracao").val() == "A") {
                $("#divHorasMes").hide();
                $("#divApuracaoHoraExtra").show();
            }
            else {
                $("#divHorasMes").show();
                $("#divApuracaoHoraExtra").hide();
            }
        }

        function AdicionarProfissional() {
            $('#Profissionais option:selected').appendTo('#ProfissionaisAlocados');
        }


        function RemoverProfissional() {
            $('#ProfissionaisAlocados option:selected').appendTo('#Profissionais');
        }

        jQuery(function ($) {
            $.datetimepicker.setLocale('pt-BR');
            $("#DataInicio").datetimepicker({ format: 'd/m/Y', lang: 'pt-BR', timepicker: false, mask: true });
            $("#DataFim").datetimepicker({ format: 'd/m/Y', lang: 'pt-BR', timepicker: false, mask: true });
            $('#HorarioEntrada').datetimepicker({ datepicker: false, format: 'H:i', value: '09:00' });
            $('#HorarioSaida').datetimepicker({ datepicker: false, format: 'H:i', value: '18:00' });
            $('#IntervaloInicio').datetimepicker({ datepicker: false, format: 'H:i', value: '12:00' });
            $('#IntervaloFim').datetimepicker({ datepicker: false, format: 'H:i', value: '13:00' });

            $('#ValorHora').maskMoney({ prefix: 'R$', decimal: ',', thousands: '.', precision: 2, allowNegative: false });
            $('#ValorHoraExtra').maskMoney({ prefix: 'R$', decimal: ',', thousands: '.', precision: 2, allowNegative: false });

            habilitarHoraExtra();
        });

        function FormatarValores() {
            var valorHora = $("#ValorHora").val();
            var valorHoraExtra = $("#ValorHoraExtra").val();

            if (valorHora != '') {
                valorHora = valorHora.replace("R$", "");
                valorHora = valorHora.replace(".", "");
                $("#ValorHora").val(valorHora);
            }

            if (valorHoraExtra != '') {
                valorHoraExtra = valorHoraExtra.replace("R$", "");
                valorHoraExtra = valorHoraExtra.replace(".", "");
                $("#ValorHoraExtra").val(valorHoraExtra);
            }
        }
        //Aplicar mascara ao valor de hora extra quando carregar a pagina
        $("#ValorHoraExtra").ready(function () {
            var valorHoraExtra = $("#ValorHoraExtra").val();
            if (valorHoraExtra != '') {
                valorHoraExtra = valorHoraExtra.replace(".", ",");
                $("#ValorHoraExtra").val(parseFloat(valorHoraExtra).toFixed(2));
                $('#ValorHoraExtra').trigger('mask.maskMoney')
            }
        });
        //Aplicar mascara ao valor hora quando carregar a pagina
        $("#ValorHora").ready(function () {
            var valorHora = $("#ValorHora").val();
            if (valorHora != '') {
                valorHora = valorHora.replace(".", ",");
                $("#ValorHora").val(parseFloat(valorHora).toFixed(2));
                $('#ValorHora').trigger('mask.maskMoney')
            }
        });

    </script>

}
